# This is a basic workflow to help you get started with Actions

name: prod-corporate

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the mentioned branches
  push:
    branches: [ main ]
    paths:
      - 'content/de/corporate/**'
      - 'content/el/corporate/**'
      - 'content/en/corporate/**'
      - 'content/es/corporate/**'
      - 'content/fr/corporate/**'
      - 'content/id/corporate/**'
      - 'content/ja/corporate/**'
      - 'content/pt/corporate/**'
      - 'content/ru/corporate/**'
      - 'content/tr/corporate/**'
      - 'content/zh/corporate/**'

  # Allows the workflow run manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          submodules: true  # Fetch Hugo themes
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
          hugo-version: '0.101.0'

    - name: Remove unwanted folders
      run: |

        if [ -d "./content/de" ]; then
        find ./content/de -mindepth 1 ! -regex '^./content/de/corporate\(/.*\)?' -delete
        fi
        if [ -d "./content/el" ]; then
        find ./content/el -mindepth 1 ! -regex '^./content/el/corporate\(/.*\)?' -delete
        fi
        if [ -d "./content/en" ]; then
        find ./content/en -mindepth 1 ! -regex '^./content/en/corporate\(/.*\)?' -delete
        fi
        if [ -d "./content/es" ]; then
        find ./content/es -mindepth 1 ! -regex '^./content/es/corporate\(/.*\)?' -delete
        fi
        if [ -d "./content/fr" ]; then
        find ./content/fr -mindepth 1 ! -regex '^./content/fr/corporate\(/.*\)?' -delete
        fi
        if [ -d "./content/id" ]; then
        find ./content/id -mindepth 1 ! -regex '^./content/id/corporate\(/.*\)?' -delete
        fi
        if [ -d "./content/ja" ]; then
        find ./content/ja -mindepth 1 ! -regex '^./content/ja/corporate\(/.*\)?' -delete
        fi
        if [ -d "./content/pt" ]; then
        find ./content/pt -mindepth 1 ! -regex '^./content/pt/corporate\(/.*\)?' -delete
        fi
        if [ -d "./content/ru" ]; then
        find ./content/ru -mindepth 1 ! -regex '^./content/ru/corporate\(/.*\)?' -delete
        fi
        if [ -d "./content/tr" ]; then
        find ./content/tr -mindepth 1 ! -regex '^./content/tr/corporate\(/.*\)?' -delete
        fi
        if [ -d "./content/zh" ]; then
        find ./content/zh -mindepth 1 ! -regex '^./content/zh/corporate\(/.*\)?' -delete
        fi

        ls content/ -all;

    - name: Build corporate pages
      run: hugo --config "./config/config-prod-releases-aspose-com.toml"  -b "https://releases.aspose.com/" --disableKinds=taxonomy,category --cleanDestinationDir --minify

    - name: Prepare public folder
      run: |

        mv public/en/sitemap.xml public/en/sitemap-corporate.xml;
        rm public/index.html;
        rm public/index.json;
        rm public/sitemap.xml;
        ls public -all;

    - name: Upload default language folder
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: 'releases.aspose.com'
        AWS_ACCESS_KEY_ID:  ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS}}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'public/corporate'
        DEST_DIR: 'corporate'

    - name: Upload en sitemap
      uses: swimlane/s3-upload-file-action@main
      with:
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_ACCESS}}
        aws_bucket: 'releases.aspose.com'
        file_path: 'public/en/sitemap-corporate.xml'
        file_mime_type: 'application/xml'
        dest_dir: 'en/'

    # Invalidate Cloudfront (this action)
    - name: invalidate
      uses: chetan/invalidate-cloudfront-action@master
      env:
        DISTRIBUTION: ${{ secrets.AWS_DISTRIBUTION_PROD }}
        PATHS: / /index.html /index.json /sitemap.xml /en/sitemap-corporate.xml /corporate/*
        AWS_REGION: 'us-west-2'
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
