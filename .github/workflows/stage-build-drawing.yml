# This is a basic workflow to help you get started with Actions

name: staging-drawing
    
# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the mentioned branches
  push:
    branches: [ stage-001 ]
    paths:
      - 'content/de/drawing/**'
      - 'content/el/drawing/**'
      - 'content/en/drawing/**'
      - 'content/es/drawing/**'
      - 'content/fr/drawing/**'
      - 'content/id/drawing/**'
      - 'content/ja/drawing/**'
      - 'content/pt/drawing/**'
      - 'content/ru/drawing/**'
      - 'content/tr/drawing/**'
      - 'content/zh/drawing/**'
  pull_request:
    branches: [ stage2 ]

  repository_dispatch:
    types: [staging-complete]
    
  # Allows the workflow run manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          submodules: true  # Fetch Hugo themes
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
          hugo-version: 'latest'
          extended: true

    - name: Remove unwanted folders
      run: |
        
        if [ -d "./content/de" ]; then 
        find ./content/de -mindepth 1 ! -regex '^./content/de/drawing\(/.*\)?' -delete
        fi
        if [ -d "./content/el" ]; then 
        find ./content/el -mindepth 1 ! -regex '^./content/el/drawing\(/.*\)?' -delete
        fi
        if [ -d "./content/en" ]; then 
        find ./content/en -mindepth 1 ! -regex '^./content/en/drawing\(/.*\)?' -delete
        fi
        if [ -d "./content/es" ]; then 
        find ./content/es -mindepth 1 ! -regex '^./content/es/drawing\(/.*\)?' -delete
        fi
        if [ -d "./content/fr" ]; then 
        find ./content/fr -mindepth 1 ! -regex '^./content/fr/drawing\(/.*\)?' -delete
        fi
        if [ -d "./content/id" ]; then 
        find ./content/id -mindepth 1 ! -regex '^./content/id/drawing\(/.*\)?' -delete
        fi
        if [ -d "./content/ja" ]; then 
        find ./content/ja -mindepth 1 ! -regex '^./content/ja/drawing\(/.*\)?' -delete
        fi
        if [ -d "./content/pt" ]; then 
        find ./content/pt -mindepth 1 ! -regex '^./content/pt/drawing\(/.*\)?' -delete
        fi
        if [ -d "./content/ru" ]; then 
        find ./content/ru -mindepth 1 ! -regex '^./content/ru/drawing\(/.*\)?' -delete
        fi
        if [ -d "./content/tr" ]; then 
        find ./content/tr -mindepth 1 ! -regex '^./content/tr/drawing\(/.*\)?' -delete
        fi
        if [ -d "./content/zh" ]; then 
        find ./content/zh -mindepth 1 ! -regex '^./content/zh/drawing\(/.*\)?' -delete
        fi
        
        ls content/ -all;
        
    - name: Build drawing pages
      run: hugo --config "./config/config-stage-releases-aspose-com.toml" -b "https://releases-qa.aspose.com/" --disableKinds=taxonomy,category --cleanDestinationDir --minify
      
    - name: Prepare public folder
      run: |
        mv public/sitemap.xml public/drawing.xml;
        rm public/index.html;
        rm public/index.json;
        mkdir public_home;
        mkdir public_home/sitemaps;
        mv public/drawing.xml public_home/sitemaps/;
        ls public -all;
        ls public/zh -all;
        ls public_home -all;

    - name: Upload drawing sitemap
      uses: swimlane/s3-upload-file-action@main
      with:
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_ACCESS}}
        aws_bucket: 'releases-qa.aspose.com'
        file_path: 'public_home/sitemaps/drawing.xml'
        file_mime_type: 'application/xml'
        dest_dir: 'sitemaps'

    - name: Upload default language
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: 'releases-qa.aspose.com'
        AWS_ACCESS_KEY_ID:  ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS}}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'public/drawing'
        DEST_DIR: 'drawing' 
        
    - name: Upload en sitemap
      uses: swimlane/s3-upload-file-action@main
      with:
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_ACCESS}}
        aws_bucket: 'releases-qa.aspose.com'
        file_path: 'public/en/sitemap.xml'
        file_mime_type: 'application/xml'
        dest_dir: 'en/drawing'
        
    - name: Upload de folder
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: 'releases-qa.aspose.com'
        AWS_ACCESS_KEY_ID:  ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS}}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'public/de/drawing'
        DEST_DIR: 'de/drawing' 

    - name: Upload de sitemap
      uses: swimlane/s3-upload-file-action@main
      with:
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_ACCESS}}
        aws_bucket: 'releases-qa.aspose.com'
        file_path: 'public/de/sitemap.xml'
        file_mime_type: 'application/xml'
        dest_dir: 'de/drawing'

    - name: Upload el folder
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: 'releases-qa.aspose.com'
        AWS_ACCESS_KEY_ID:  ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS}}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'public/el/drawing'
        DEST_DIR: 'el/drawing' 

    - name: Upload el sitemap
      uses: swimlane/s3-upload-file-action@main
      with:
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_ACCESS}}
        aws_bucket: 'releases-qa.aspose.com'
        file_path: 'public/el/sitemap.xml'
        file_mime_type: 'application/xml'
        dest_dir: 'el/drawing'

    - name: Upload es folder
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: 'releases-qa.aspose.com'
        AWS_ACCESS_KEY_ID:  ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS}}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'public/es/drawing'
        DEST_DIR: 'es/drawing' 

    - name: Upload es sitemap
      uses: swimlane/s3-upload-file-action@main
      with:
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_ACCESS}}
        aws_bucket: 'releases-qa.aspose.com'
        file_path: 'public/es/sitemap.xml'
        file_mime_type: 'application/xml'
        dest_dir: 'es/drawing'

    - name: Upload fr folder
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: 'releases-qa.aspose.com'
        AWS_ACCESS_KEY_ID:  ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS}}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'public/fr/drawing'
        DEST_DIR: 'fr/drawing' 

    - name: Upload fr sitemap
      uses: swimlane/s3-upload-file-action@main
      with:
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_ACCESS}}
        aws_bucket: 'releases-qa.aspose.com'
        file_path: 'public/fr/sitemap.xml'
        file_mime_type: 'application/xml'
        dest_dir: 'fr/drawing'

    - name: Upload id folder
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: 'releases-qa.aspose.com'
        AWS_ACCESS_KEY_ID:  ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS}}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'public/id/drawing'
        DEST_DIR: 'id/drawing' 

    - name: Upload id sitemap
      uses: swimlane/s3-upload-file-action@main
      with:
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_ACCESS}}
        aws_bucket: 'releases-qa.aspose.com'
        file_path: 'public/id/sitemap.xml'
        file_mime_type: 'application/xml'
        dest_dir: 'id/drawing'

    - name: Upload ja folder
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: 'releases-qa.aspose.com'
        AWS_ACCESS_KEY_ID:  ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS}}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'public/ja/drawing'
        DEST_DIR: 'ja/drawing' 

    - name: Upload ja sitemap
      uses: swimlane/s3-upload-file-action@main
      with:
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_ACCESS}}
        aws_bucket: 'releases-qa.aspose.com'
        file_path: 'public/ja/sitemap.xml'
        file_mime_type: 'application/xml'
        dest_dir: 'ja/drawing'

    - name: Upload pt folder
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: 'releases-qa.aspose.com'
        AWS_ACCESS_KEY_ID:  ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS}}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'public/pt/drawing'
        DEST_DIR: 'pt/drawing' 

    - name: Upload pt sitemap
      uses: swimlane/s3-upload-file-action@main
      with:
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_ACCESS}}
        aws_bucket: 'releases-qa.aspose.com'
        file_path: 'public/pt/sitemap.xml'
        file_mime_type: 'application/xml'
        dest_dir: 'pt/drawing'

    - name: Upload ru folder
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: 'releases-qa.aspose.com'
        AWS_ACCESS_KEY_ID:  ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS}}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'public/ru/drawing'
        DEST_DIR: 'ru/drawing' 

    - name: Upload ru sitemap
      uses: swimlane/s3-upload-file-action@main
      with:
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_ACCESS}}
        aws_bucket: 'releases-qa.aspose.com'
        file_path: 'public/ru/sitemap.xml'
        file_mime_type: 'application/xml'
        dest_dir: 'ru/drawing'

    - name: Upload tr folder
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: 'releases-qa.aspose.com'
        AWS_ACCESS_KEY_ID:  ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS}}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'public/tr/drawing'
        DEST_DIR: 'tr/drawing' 

    - name: Upload tr sitemap
      uses: swimlane/s3-upload-file-action@main
      with:
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_ACCESS}}
        aws_bucket: 'releases-qa.aspose.com'
        file_path: 'public/tr/sitemap.xml'
        file_mime_type: 'application/xml'
        dest_dir: 'tr/drawing'

    - name: Upload zh folder
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: 'releases-qa.aspose.com'
        AWS_ACCESS_KEY_ID:  ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS}}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'public/zh/drawing'
        DEST_DIR: 'zh/drawing' 

    - name: Upload zh sitemap
      uses: swimlane/s3-upload-file-action@main
      with:
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_ACCESS}}
        aws_bucket: 'releases-qa.aspose.com'
        file_path: 'public/zh/sitemap.xml'
        file_mime_type: 'application/xml'
        dest_dir: 'zh/drawing'